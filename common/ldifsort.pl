#!/usr/bin/perl

### ldifsort.pl
### (C) Jan 2009-Aug 2013 by Jim Klimov, COS&HT
### $Id: ldifsort.pl,v 1.10 2013/11/02 12:29:18 jim Exp $
### Sorts alphabetically the input LDIF file to an output long-line LDIF
### for easier DIFF comparison. Accepts standard wrapped-LDIF input.
###
### This variant leaves LDAP entries where they are and only sorts attributes
### within an entry. Should be faster and have less memory footprint than the
### ldifsort-fulltree.pl variant.
###
### Usage: ./ldifsort.pl < dsexport=ldapsrv01-20090128T112356Z.ldif > c1.ldif
###   to strip comments and replication info from attribute names pipe thru:
###	| egrep -v '^#' | sed 's/^\([^;:]*\)[^ :]*\(:* .*\)$/\1\2/'
###   to strip create/modify metadata:
###	| egrep -vi '^((creator|modifier)sName|(modify|create)Timestamp): '

### Parameters
$DEBUG=0;
$WRITE_COMMENT=1;

### Init variables
$COMMENT="";
$DN="";
$PREVLINE="";
$NUM=0;

### Counters
$NUMENTRIES=0;
$NUMBLOCKS=0;

while ( <> ) {
	chomp;

	if ( /^(#.*)$/ ) { 
	    ### LDIFs generated by Sun dsconf export can contain comments
	    $COMMENT .= $1 . "\n"
	} elsif ( /^(dn::? .*)$/ ) {
	    $DN=$1;
	} elsif ( /^ (.*)$/ ) {
	    ### A single space tabulates wrapped-LDIF long lines
	    if ( $PREVLINE ne "" ) {
	        $PREVLINE .= "$1";
	    } elsif ( $DN ne "" ) {
		$DN .= "$1";
	    } elsif ( $COMMENT ne "" ) {
		$COMMENT .= "$1";
	    } else {
		die "  !!! bogus line: $_\n";
	    }
	} elsif ( /^$/ ) {
	    ### Capture last line to array
	    if ( $PREVLINE ne "" ) {
		$entrylines{$PREVLINE} = $NUM++;
	    }

	    ### comment includes \n if exists at all
	    if ( $WRITE_COMMENT ne 0 && $COMMENT ne "" ) { print $COMMENT; }
	    if ( $DN ne "" ) { print "$DN\n"; $NUMENTRIES++; }

	    foreach $line ( sort (keys %entrylines) ) {
		if ( $line ne "" ) { print "$line\n"; }
	    }
	    print "\n";

	    if ( $DEBUG > 1 ) { print STDERR "$NUM\tattributes in\t$DN\n"; }
	    $NUMBLOCKS++;

	    ### Init variables
	    $COMMENT="";
	    $DN="";
	    $PREVLINE="";
	    $NUM=0;
	    
	    ### Destroy assoc array
	    undef %entrylines;
	} else {
	    ### Most common case - an attribute line
	    if ( $PREVLINE ne "" ) {
		$entrylines{$PREVLINE} = $NUM++;
	    }
	    $PREVLINE = $_;
	}
}

if ( $DEBUG > 0 ) {
    print STDERR "Stats:\n\tProcessed DN entries:\t$NUMENTRIES\n\tWritten text blocks:\t$NUMBLOCKS\n";
}
